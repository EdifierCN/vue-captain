.hairline(@position, @color) when (@position = top) {
  &:before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    bottom: auto;
    right: auto;
    height: 1px;
    width: 100%;
    background-color: @color;
    display: block;
    z-index: 1;
    transform-origin: 50% 0%;
    @media only screen and (-webkit-min-device-pixel-ratio: 2) {
      transform: scaleY(0.5);
    }
  }
}
.hairline(@position, @color) when (@position = left) {
  &:before {
    content: '';
    position: absolute;
    left: 0;
    top: 0;
    bottom: auto;
    right: auto;
    width: 1px;
    height: 100%;
    background-color: @color;
    display: block;
    z-index: 1;
    transform-origin: 0% 50%;
    @media only screen and (-webkit-min-device-pixel-ratio: 2) {
      transform: scaleX(0.5);
    }
  }
}
.hairline(@position, @color) when (@position = bottom) {
  &:after {
    content: '';
    position: absolute;
    left: 0;
    bottom: 0;
    right: auto;
    top: auto;
    height: 1px;
    width: 100%;
    background-color: @color;
    display: block;
    z-index: 1;
    transform-origin: 50% 100%;
    @media only screen and (-webkit-min-device-pixel-ratio: 2) {
      transform: scaleY(0.5);
    }
  }
}
.hairline(@position, @color) when (@position = right) {
  &:after {
    content: '';
    position: absolute;
    right: 0;
    top: 0;
    left: auto;
    bottom: auto;
    width: 1px;
    height: 100%;
    background-color: @color;
    display: block;
    z-index: 1;
    transform-origin: 100% 50%;
    @media only screen and (-webkit-min-device-pixel-ratio: 2) {
      transform: scaleX(0.5);
    }
  }
}
// For right and bottom
.hairline-remove(@position) when not (@position = left) and not (@position = top) {
  &:after {
    display: none;
  }
}
// For left and top
.hairline-remove(@position) when not (@position = right) and not (@position = bottom) {
  &:before {
    display: none;
  }
}
// For right and bottom
.hairline-color(@position, @color) when not (@position = left) and not (@position = top) {
  &:after {
    background-color: @color;
  }
}
// For left and top
.hairline-color(@position, @color) when not (@position = right) and not (@position = bottom) {
  &:before {
    background-color: @color;
  }
}

.hairline(@type, @color, @offset) when (@type = single) {
  background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100%' height='1'><rect fill='#{@color}' x='0' y='0' width='100%' height='0.5'/></svg>");
  background-position: @offset 100%;
}
.hairline(@type, @color, @offset) when (@type = double) {
  background-image: url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100%' height='1'><rect fill='#{@color}' x='0' y='0' width='100%' height='0.5'/></svg>"),
  url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' width='100%' height='1'><rect fill='#{@color}' x='0' y='0' width='100%' height='0.5'/></svg>");
  background-position: @offset 100%, @offset 0;
  background-repeat: no-repeat;
}

.hairline-border(@color, @radius) {
  position: relative;
  &:after {
    content: " ";
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    border: 1px solid @color;
    border-radius: @radius;
    transform-origin: 0 0;
    z-index: 0;
    box-sizing: border-box;
    @media only screen and (-webkit-min-device-pixel-ratio: 2) {
      height: 200%;
      width: 200%;
      transform: scale(0.5);
      border-radius: (@radius * 2);
    }
  }
}

.hairline-border(@color, @radius, @dir) when (@dir = vertical) {
  .hairline-border(@color, @radius);
  &:after {
    border-left: 0;
    border-right: 0;
  }
}

.hairline-border(@color, @radius, @dir) when (@dir = noright) {
  .hairline-border(@color, @radius);
  &:after {
    border-right: 0;
    border-radius: @radius 0 0 @radius;
  }
}

.hairline-border(@color, @radius, @dir) when (@dir = noleft) {
  .hairline-border(@color, @radius);
  &:after {
    border-left: 0;
    border-radius: 0 @radius @radius 0;
  }
}

.hairline-border-remove() {
  &:after {
    display: none;
  }
}

.hairline-border-remove(@dir) when (@dir = left) {
  &:after {
    border-left: 0;
  }
}

.hairline-border-remove(@dir) when (@dir = right) {
  &:after {
    border-right: 0;
  }
}

.hairline-border-remove(@dir) when (@dir = top) {
  &:after {
    border-top: 0;
  }
}

.hairline-border-remove(@dir) when (@dir = bottom) {
  &:after {
    border-bottom: 0;
  }
}
